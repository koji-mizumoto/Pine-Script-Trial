//@version=5
indicator("DEMA and GC and Volatility", overlay=true)

//ゴールデンクロス、デッドクロス描画用
[macdLine, signalLine, _] = ta.macd(close, 12, 26, 9)
goldenCross = ta.crossover(macdLine, signalLine)
plotshape(goldenCross, location=location.belowbar, color=color.yellow, style=shape.labelup, title="Golden Cross", text="GC")
deadCross = ta.crossunder(macdLine, signalLine)
plotshape(deadCross, location=location.abovebar, color=color.red, style=shape.labeldown, title="Dead Cross", text="DC")

length = input.int(20)
ema01 = ta.ema(close,20)
ema02 = ta.ema(ema01,20)
dema1 = 2 * ema01 - ema02

// DEMAの変化が連続して上昇しているかをチェックするための期間を設定
uptrend_length = input.int(3, title="Uptrend Length")

// 指定期間内にdema_difがすべて上昇しているかどうかを確認
is_uptrend = true
for i = 1 to uptrend_length
    is_uptrend := is_uptrend and (dema1[i] > dema1[i + 1])

//demaの平均値が上昇しているか
dema_dif = dema1 - dema1[1]
bgcolor(is_uptrend ? color.green : color.red, transp=50)


//ボラティリティの変動性です。
//価格の動きの大きさを表示します。

//demaの過敏性があり、動きの強弱に反応した平均線で
//ボリンジャーを作ります。
//ボリンジャーの過敏性をdemaで強化します
ema1 = ta.ema(close,20)
ema2 = ta.ema(ta.ema(close,20),20)
dema = 2 * ema1 - ema2

//標準偏差です
stdev_value = ta.stdev(close, 20)

//ボリンジャーを作ります
upper_bb = dema + 1.5 * stdev_value
lower_bb = dema - 1.5 * stdev_value

//wmaの少しemaより遅くノイズが少ない平均線で
//ケルトナーを作ります
//wmaのケルトナーはemaのケルトナーより
//反応が遅いのでゆっくりになります。
wma1 = ta.wma(close,20)

//偏差を求めます
atr_value = ta.atr(20)

upper_kc = dema + 1.5 * atr_value
lower_kc = dema - 1.5 * atr_value

//価格の動きに敏感なボリンジャーから、価格の動きにゆっくりなケルトナーを引くことで、
//変動性を表示します
hantei = math.max(math.max(upper_kc,upper_bb) - math.min(upper_kc,upper_bb),math.max(lower_bb,lower_kc) - math.min(lower_bb,lower_kc))
plot(hantei,color=hantei > 0.4 ? color.orange:color.blue, linewidth=8) 