//@version=5
strategy("Simple Portfolio Optimization", overlay=true)

//問３ポートフォリオ最適化

//複数の銘柄を対象としたポートフォリオの最適化スクリプトを作成してください。

//各銘柄のリスクとリターンを考慮し、最適なポートフォリオ配分を自動的に計算する機能を追加してください。

//アップル社とマイクロソフト社の投資比

// 2つの銘柄（例：A株、B株）のシンボル
symbol_a = "AAPL"
symbol_b = "MSFT"

// 計算する期間（例えば20期間）
length = 20

// 各銘柄の価格データを取得
price_a = request.security(symbol_a, "D", close)
price_b = request.security(symbol_b, "D", close)

// 各銘柄のリターン計算（前日比）
returns_a = (price_a - price_a[1]) / price_a[1]
returns_b = (price_b - price_b[1]) / price_b[1]

// 各銘柄の平均リターン（20期間）
avg_return_a = ta.sma(returns_a, length)
avg_return_b = ta.sma(returns_b, length)

// 各銘柄の標準偏差（リスク）
std_dev_a = ta.stdev(returns_a, length)
std_dev_b = ta.stdev(returns_b, length)

// 各銘柄のシャープ比を計算
sharpe_a = avg_return_a / std_dev_a
sharpe_b = avg_return_b / std_dev_b

// シャープ比を使ってポートフォリオ配分を決定（シャープ比が高い方に多く配分）
total_sharpe = sharpe_a + sharpe_b
weight_a = sharpe_a / total_sharpe
weight_b = sharpe_b / total_sharpe

// 最適な資産配分（ポジションサイズ）を表示
plot(weight_a, color=color.green, title="Weight of AAPL")
plot(weight_b, color=color.blue, title="Weight of MSFT")

// 実際のエントリー（例：2つの銘柄に適切な割合でエントリー）
if (weight_a > 0.5)
    strategy.entry("Long AAPL", strategy.long, qty=weight_a * 100)
if (weight_b > 0.5)
    strategy.entry("Long MSFT", strategy.long, qty=weight_b * 100)

// 購入した銘柄のリターンを表示
plot(series=returns_a * weight_a, color=color.green, linewidth=2, title="Weighted Return AAPL")
plot(series=returns_b * weight_b, color=color.blue, linewidth=2, title="Weighted Return MSFT")